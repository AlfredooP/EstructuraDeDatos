
import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Guest
 */
public class Forma extends javax.swing.JFrame {

    /**
     * Creates new form Form
     */
    
    DefaultTableModel modelo1;
    DefaultTableModel modelo2;
    DefaultTableModel modelo3;
    
    
    public Forma() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/libro-abierto2.png")).getImage());
        
        this.setLocationRelativeTo(null);
        
        modelo1 = (DefaultTableModel) jTable1.getModel();
        modelo1.setRowCount(Integer.valueOf(this.jSpinnerNRen.getValue().toString()));
        modelo1.setColumnCount(Integer.valueOf(this.jSpinnerNCol.getValue().toString()));
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        
        modelo2 = (DefaultTableModel) jTable2.getModel();
        modelo2.setRowCount(Integer.valueOf(this.jSpinnerNRen.getValue().toString()));
        modelo2.setColumnCount(Integer.valueOf(this.jSpinnerNCol.getValue().toString()));
        jTable2.setShowHorizontalLines(true);
        jTable2.setShowVerticalLines(true);
        
        modelo3 = (DefaultTableModel) jTable3.getModel();
        modelo3.setRowCount(Integer.valueOf(this.jSpinnerNRen.getValue().toString()));
        modelo3.setColumnCount(Integer.valueOf(this.jSpinnerNCol.getValue().toString()));
        jTable3.setShowHorizontalLines(true);
        jTable3.setShowVerticalLines(true);
        
        //PARA QUITAR LOS ENCABEZADOS POR DEFAULT DE LOS JTABLE
        //USAR LA PROPIEDAD tableHeader Y ASIGNAR UN NULL
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoRB = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBoxMA = new javax.swing.JCheckBox();
        jCheckBoxMB = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jRadioCapturar = new javax.swing.JRadioButton();
        jRadioDefault = new javax.swing.JRadioButton();
        jRadioAleatorios = new javax.swing.JRadioButton();
        jRadioNuevo = new javax.swing.JRadioButton();
        jSpinnerNRen = new javax.swing.JSpinner();
        jSpinnerNCol = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jButtonMultiplicarMatrices = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MULTIPLICACION DE MATRICES");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DATOS");

        jCheckBoxMA.setText("Matriz A");

        jCheckBoxMB.setText("Matriz B");

        jLabel2.setText("No. Rengs:");

        jLabel3.setText("No. Col:");

        grupoRB.add(jRadioCapturar);
        jRadioCapturar.setText("Capturar");
        jRadioCapturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioCapturarActionPerformed(evt);
            }
        });

        grupoRB.add(jRadioDefault);
        jRadioDefault.setText("X Default");
        jRadioDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioDefaultActionPerformed(evt);
            }
        });

        grupoRB.add(jRadioAleatorios);
        jRadioAleatorios.setText("Aleatorios");
        jRadioAleatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioAleatoriosActionPerformed(evt);
            }
        });

        grupoRB.add(jRadioNuevo);
        jRadioNuevo.setText("Nuevo");
        jRadioNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioNuevoActionPerformed(evt);
            }
        });

        jSpinnerNRen.setModel(new javax.swing.SpinnerNumberModel(3, 3, 5, 1));
        jSpinnerNRen.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerNRenStateChanged(evt);
            }
        });

        jSpinnerNCol.setModel(new javax.swing.SpinnerNumberModel(3, 3, 5, 1));
        jSpinnerNCol.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerNColStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBoxMA)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBoxMB))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinnerNRen, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerNCol, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jRadioCapturar)
                            .addComponent(jRadioDefault)
                            .addComponent(jRadioAleatorios)
                            .addComponent(jRadioNuevo))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxMA)
                    .addComponent(jCheckBoxMB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinnerNRen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jSpinnerNCol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioCapturar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioDefault)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioAleatorios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioNuevo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setEnabled(false);
        jTable1.setTableHeader(null);
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("MATRIZ A");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable3.setEnabled(false);
        jTable3.setTableHeader(null);
        jScrollPane4.setViewportView(jTable3);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("MATRIZ C");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.setEnabled(false);
        jTable2.setTableHeader(null);
        jScrollPane2.setViewportView(jTable2);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("MATRIZ B");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jButtonMultiplicarMatrices.setText("=");
        jButtonMultiplicarMatrices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplicarMatricesActionPerformed(evt);
            }
        });

        jLabel6.setText("x");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonMultiplicarMatrices)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(170, 170, 170))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonMultiplicarMatrices)
                        .addGap(171, 171, 171))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioCapturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioCapturarActionPerformed
        if(!jTable1.isEnabled())
            jTable1.setEnabled(true);
        if(!jTable2.isEnabled())
            jTable2.setEnabled(true);
        if(this.jCheckBoxMA.isSelected() || this.jCheckBoxMB.isSelected()){
            if(jCheckBoxMA.isSelected()){
                for(int ren = 0; ren < modelo1.getRowCount(); ren++){
                    for(int col = 0; col < modelo1.getColumnCount(); col++){
                        this.jTable1.setValueAt("", ren, col);
                    }
                    jTable1.requestFocus();       
                }
            }
            if(jCheckBoxMB.isSelected()){
                for(int ren = 0; ren < modelo2.getRowCount(); ren++){
                    for(int col = 0; col < modelo2.getColumnCount(); col++){
                        this.jTable2.setValueAt("", ren, col);
                    }
                    jTable2.requestFocus();
                    
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Selecciona al menos una Matriz");
        }
    }//GEN-LAST:event_jRadioCapturarActionPerformed

    private void jRadioDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioDefaultActionPerformed
        
        int [][] matXDefault = {{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5},{1,2,3,4,5}};
        
        if(this.jCheckBoxMA.isSelected() || this.jCheckBoxMB.isSelected()){
            if(jCheckBoxMA.isSelected()){
                for(int ren = 0; ren < modelo1.getRowCount(); ren++){
                    for(int col = 0; col < modelo1.getColumnCount(); col++){
                        this.jTable1.setValueAt(matXDefault[ren][col], ren, col);
                    }
                    jTable1.requestFocus();       
                }
            }
            if(jCheckBoxMB.isSelected()){
                for(int ren = 0; ren < modelo2.getRowCount(); ren++){
                    for(int col = 0; col < modelo2.getColumnCount(); col++){
                        this.jTable2.setValueAt(matXDefault[ren][col], ren, col);
                    }
                    jTable2.requestFocus();
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Selecciona al menos una Matriz");
        }
    }//GEN-LAST:event_jRadioDefaultActionPerformed

    private void jRadioAleatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioAleatoriosActionPerformed
        
        Random random = new Random();
        if(this.jCheckBoxMA.isSelected() || this.jCheckBoxMB.isSelected()){
            if(jCheckBoxMA.isSelected()){
                for(int ren = 0; ren < modelo1.getRowCount(); ren++){
                    for(int col = 0; col < modelo1.getColumnCount(); col++){
                        this.jTable1.setValueAt(random.nextInt(100), ren, col);
                    }
                    jTable1.requestFocus();       
                }
            }
            if(jCheckBoxMB.isSelected()){
                for(int ren = 0; ren < modelo2.getRowCount(); ren++){
                    for(int col = 0; col < modelo2.getColumnCount(); col++){
                        this.jTable2.setValueAt(random.nextInt(100), ren, col);
                    }
                    jTable2.requestFocus();
                    
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Selecciona al menos una Matriz");
        }
        
    }//GEN-LAST:event_jRadioAleatoriosActionPerformed

    private void jRadioNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioNuevoActionPerformed
        
        this.jCheckBoxMA.setSelected(false);
        this.jCheckBoxMB.setSelected(false);
        this.jSpinnerNCol.setValue(3);
        this.jSpinnerNRen.setValue(3);
        this.jRadioCapturar.setSelected(false);
        this.jRadioDefault.setSelected(false);
        this.jRadioAleatorios.setSelected(false);
        this.jRadioNuevo.setSelected(false);
        this.jTable1.clearSelection();
        for(int r = 0; r < modelo1.getRowCount(); r++)
            for(int c = 0; c < modelo1.getColumnCount(); c++)
                this.jTable1.setValueAt("", r, c);
        for(int r = 0; r < modelo2.getRowCount(); r++)
            for(int c = 0; c < modelo2.getColumnCount(); c++)
                this.jTable2.setValueAt("", r, c);
        for(int r = 0; r < modelo3.getRowCount(); r++)
            for(int c = 0; c < modelo3.getColumnCount(); c++)
                this.jTable3.setValueAt("", r, c);
        
    }//GEN-LAST:event_jRadioNuevoActionPerformed

    private void jButtonMultiplicarMatricesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplicarMatricesActionPerformed
        
        Matriz mA = new Matriz(this.jTable1);
        Matriz mB = new Matriz(this.jTable2);
        if(mA.nCol() == mB.nRen()){
            Matriz mC = new Matriz(mA.nRen(),mB.nCol());
            modelo3.setRowCount(mA.nRen());
            modelo3.setColumnCount(mB.nCol());
            mC = mA.multiplicar(mB);
            
            System.out.println("Matriz C:");
            for(int i = 0; i< mC.nRen(); i++){
                for(int j = 0; j < mC.nCol(); j++){
                    System.out.print(mC.mat[i][j] + " | ");
                }
                System.out.println();
            }
            for(int i = 0; i< mC.nRen(); i++){
                for(int j = 0; j < mC.nCol(); j++){
                    this.modelo3.setValueAt(mC.mat[i][j], i, j);
                }
            }
        }
        else{
            //Icon icono = new ImageIcon(getClass().getResource("/libro-abierto2.png"));
            JOptionPane.showMessageDialog(null, "El numero de columnas de la Matriz A \n" +
             "debe ser igual al numero de renglones de la Matriz B ", "ERROR, ENTRADA NO VALIDA", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonMultiplicarMatricesActionPerformed

    private void jSpinnerNRenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerNRenStateChanged
        
        if(this.jCheckBoxMA.isSelected() || this.jCheckBoxMB.isSelected()){
            if(jCheckBoxMA.isSelected()){
                modelo1.setRowCount((int)this.jSpinnerNRen.getValue());
            }
            if(jCheckBoxMB.isSelected()){
                modelo2.setRowCount((int)this.jSpinnerNRen.getValue());
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Debes seleccionar al menos una de las matrices");
            
        }
    }//GEN-LAST:event_jSpinnerNRenStateChanged

    private void jSpinnerNColStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerNColStateChanged
        if(this.jCheckBoxMA.isSelected() || this.jCheckBoxMB.isSelected()){
            if(jCheckBoxMA.isSelected()){
                modelo1.setColumnCount((int)this.jSpinnerNCol.getValue());
            }
            if(jCheckBoxMB.isSelected()){
                modelo2.setColumnCount((int)this.jSpinnerNCol.getValue());
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Debes seleccionar al menos una de las matrices");
            
        }
    }//GEN-LAST:event_jSpinnerNColStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Forma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Forma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Forma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Forma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Forma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoRB;
    private javax.swing.JButton jButtonMultiplicarMatrices;
    private javax.swing.JCheckBox jCheckBoxMA;
    private javax.swing.JCheckBox jCheckBoxMB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioAleatorios;
    private javax.swing.JRadioButton jRadioCapturar;
    private javax.swing.JRadioButton jRadioDefault;
    private javax.swing.JRadioButton jRadioNuevo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinnerNCol;
    private javax.swing.JSpinner jSpinnerNRen;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
